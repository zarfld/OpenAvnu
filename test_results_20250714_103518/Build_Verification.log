
=============================================
  OpenAvnu Build Verification Test
=============================================

OpenAvnu Root: C:\Users\dzarf\Source\OpenAvnu
OpenAvnu Root: C:\Users\dzarf\Source\OpenAvnu

Step 1: CMake Configuration
----------------------------
-- Selecting Windows SDK version 10.0.26100.0 to target Windows 10.0.19045.
-- ­ƒöì Detecting PCAP libraries for OpenAvnu components...
-- ÔÜá´©Å  Found legacy WinPcap SDK: C:\WpdPack
-- ­ƒôª PCAP Summary:
--    Type: WinPcap
--    Source: WPCAP_DIR
--    Include: C:\WpdPack/Include
--    Libraries: wpcap;Iphlpapi;Ws2_32
--    Library Dir: C:\WpdPack/Lib/x64
-- Ô£à PCAP detection complete - Available for OpenAvnu components
-- Could NOT find PkgConfig (missing: PKG_CONFIG_EXECUTABLE) 
powershell.exe : cmake.exe : CMake Warning at cmake/FindPCAP.cmake:34 (message):
In C:\Users\dzarf\Source\OpenAvnu\testing\integration\daemons_phase2_windows_build_verification\run_daw02_tes
ts.ps1:65 Zeichen:17
+ ...             & powershell.exe -ExecutionPolicy Bypass -File $FullScrip ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (cmake.exe : CMa...e:34 (message)::String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError
 
In C:\Users\dzarf\Source\OpenAvnu\testing\integration\daemons_phase2_windows_build_verification\test_01_build
_verification.ps1:62 Zeichen:5
+     & cmake .. -G "Visual Studio 17 2022" 2>&1
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (CMake Warning a...e:34 (message)::String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError
 
  WinPcap is deprecated.  Consider upgrading to Npcap for better Windows
  10/11 support.
Call Stack (most recent call first):
  CMakeLists.txt:47 (include)
CMake Deprecation Warning at thirdparty/cpputest/CMakeLists.txt:8 (cmake_minimum_required):
  Compatibility with CMake < 3.10 will be removed from a future version of
  CMake.
  Update the VERSION argument <min> value.  Or, use the <min>...<max> syntax
  to tell CMake that the project requires at least <min> but has been updated
  to work with policies introduced by <max> or earlier.
-- Building with Intel Ethernet HAL for hardware timestamping
-------------------------------------------------------
CppUTest Version 3.8
Current compiler options:
    CC:                                 C:/Program Files/Microsoft Visual 
Studio/2022/Community/VC/Tools/MSVC/14.38.33130/bin/Hostx64/x64/cl.exe
    CXX:                                C:/Program Files/Microsoft Visual 
Studio/2022/Community/VC/Tools/MSVC/14.38.33130/bin/Hostx64/x64/cl.exe
    CppUTest CFLAGS:                     /FI 
"C:/Users/dzarf/Source/OpenAvnu/thirdparty/cpputest/include/CppUTest/MemoryLeakDetectorMallocMacros.h" /WX
    CppUTest CXXFLAGS:                   /FI 
"C:/Users/dzarf/Source/OpenAvnu/thirdparty/cpputest/include/CppUTest/MemoryLeakDetectorMallocMacros.h" /WX 
/wd4290
    CppUTest LDFLAGS:                   
Features configured in CppUTest:
    Memory Leak Detection:              ON
    Compiling Extensions:               ON
    Support Long Long:                  OFF
    Use CppUTest flags:                 ON
    Using Standard C library:           ON
    Using Standard C++ library:         ON
    Using C++11 library:                OFF
    Generating map file:                OFF
    Compiling with coverage:            OFF
    Compile and run self-tests          ON
    Run self-tests separately           OFF
-------------------------------------------------------
-- 
-- Intel Ethernet HAL Configuration Summary:
--   Version: 1.0.0
--   Platform: Windows
--   Compiler: MSVC
--   Build Type: RelWithDebInfo
--   Install Prefix: C:/Program Files (x86)/open-avb
--   Build Examples: ON
--   Build Tests: ON
--   Windows NDIS Support: Enabled
-- 
-- Building with gPTP daemon support
-- ÔÜá´©Å  Using legacy WinPcap SDK from: C:\WpdPack/Include/..
-- Ô£à Intel HAL integration enabled for gPTP
--    - Intel HAL headers: ../intel-ethernet-hal/include
--    - Intel HAL library: intel-ethernet-hal-static
-- Building with L-Acoustics AVDECC library for modern AVDECC support
-- ­ƒöº Configuring L-Acoustics AVDECC with modern PCAP support
-- Ô£à Using WinPcap for L-Acoustics AVDECC
-- Ô£à L-Acoustics AVDECC PCAP compatibility layer ready
--    WinPcap compatibility path: C:/Users/dzarf/Source/OpenAvnu/lib/la_avdecc/externals/3rdparty/winpcap
-- ­ƒôª L-Acoustics AVDECC configuration:
--    PCAP Interface: ON
--    Controller: ON
--    Virtual Entity: ON
-- CMake Macros v12.0
-- CU_PROJECT_URLABOUTINFO not set, using default value: http://www.l-acoustics.com
-- CU_BETA_TAG not set, using default value: -beta
-- CU_DOTNET_FRAMEWORK_VERSION not set, using default value: net8.0
-- Graphviz's 'dot' not found in the path. Make sure it's installed and in the path if you want class graph in Doxygen. Download it from http://www.graphviz.org/
-- CU_PROJECT_COMPANYNAME not set, using default value: L-Acoustics
-- CU_PROJECT_LEGALCOPYRIGHT not set, using default value: (c) L-Acoustics and its contributors
-- CU_PROJECT_READABLE_COPYRIGHT not set, using default value: Copyright 2016-2025, L-Acoustics and its contributors
-- CU_PROJECT_MARKETING_VERSION_DIGITS not set, using default value: 2 digits
-- Version: 10.1.0
-- Build type: RelWithDebInfo
-- Using the multi-header code from C:/Users/dzarf/Source/OpenAvnu/lib/la_avdecc/externals/3rdparty/json/include/
-- Graphviz's 'dot' not found in the path. Make sure it's installed and in the path if you want class graph in Doxygen. Download it from http://www.graphviz.org/
-- Building Network Interface Helper Library
-- Defining project la_networkInterfaceHelper
-- Added alias for la_networkInterfaceHelper_static (la_networkInterfaceHelper::static)
-- Building Avdecc library
CMake Warning at lib/la_avdecc/cmake/cmakeUtils/ProjectMacros.cmake:1817 (message):
  MARKETING_VERSION_DIGITS and MARKETING_VERSION_POSTFIX are not set, please
  upgrade bashUtils to the latest version (ignore if gen_cmake/gen_install is
  not used)
Call Stack (most recent call first):
  lib/la_avdecc/externals/nih/CMakeLists.txt:137 (cu_finalize)
-- Defining project la_avdecc
-- Added alias for la_avdecc_cxx (la_avdecc::shared)
-- Added alias for la_avdecc_static (la_avdecc::static)
-- Building Avdecc Controller library
-- Defining project la_avdecc_controller
-- Added alias for la_avdecc_controller_cxx (la_avdecc_controller::shared)
-- Added alias for la_avdecc_controller_static (la_avdecc_controller::static)
-- Building with Open1722 AVTP library support
CMake Warning at lib/la_avdecc/cmake/cmakeUtils/ProjectMacros.cmake:1817 (message):
  MARKETING_VERSION_DIGITS and MARKETING_VERSION_POSTFIX are not set, please
-- Created Open1722 static library for Windows with MSVC compatibility
-- Building OpenAvnu examples
  upgrade bashUtils to the latest version (ignore if gen_cmake/gen_install is
  not used)
Call Stack (most recent call first):
  lib/la_avdecc/CMakeLists.txt:284 (cu_finalize)
-- ­ƒöº Building OpenAvnu examples with WinPcap support
-- ÔÜá´©Å  Skipping POSIX examples on Windows - not yet ported
--     Examples use pthread.h, netinet/in.h and other POSIX headers
--     Consider porting to Windows threading and networking APIs
-- ­ƒöº Building Clock Quality Demo (cross-platform)
-- ­ƒôª OpenAvnu examples configuration complete
-- ­ƒöº Building Intel Ethernet HAL examples
-- Common Tests: Using WinPcap from: C:\WpdPack/Include/..
-- Common Tests: Using 64-bit PCAP libraries from: C:\WpdPack/Include/../Lib/x64
-- MRPD: Using WinPcap from: C:\WpdPack/Include/..
-- MRPD: Using 64-bit PCAP libraries from: C:\WpdPack/Include/../Lib/x64
-- MRPD: Intel HAL integration enabled for Windows
-- MRPD Tests: Using WinPcap from: C:\WpdPack/Include/..
-- MRPD Tests: Using 64-bit PCAP libraries from: C:\WpdPack/Include/../Lib/x64
-- MAAP: Using WinPcap from: C:\WpdPack/Include/..
-- MAAP: Using 64-bit PCAP libraries from: C:\WpdPack/Include/../Lib/x64
-- MAAP: Intel HAL integration enabled for Windows
-- MAAP Tests: Using WinPcap from: C:\WpdPack/Include/..
-- MAAP Tests: Using 64-bit PCAP libraries from: C:\WpdPack/Include/../Lib/x64
-- Shaper: Intel HAL integration enabled
-- Windows Shaper daemon target configured: openavnu_shaper_windows
-- Open1722 AVTP wrapper configured
-- ­ƒº¬ Building with unified testing framework
-- ­ƒº¬ Building conformance tests
-- ­ƒöº Building hardware tests
--   - Intel HAL Target: intel-ethernet-hal-static (static library)
-- Intel HAL Validation Test Configuration:
--   - Intel HAL Include: C:/Users/dzarf/Source/OpenAvnu/thirdparty/intel-ethernet-hal/include
--   - Output Directory: C:/Users/dzarf/Source/OpenAvnu/build/tests
-- ­ƒöù Building integration tests
-- ­ƒôè Building performance tests
-- 
-- ­ƒôï OpenAvnu Testing Framework Configuration Summary:
--    Conformance Tests: ON
--    Hardware Tests:    ON
--    Integration Tests: ON
--    Performance Tests: ON
-- 
-- ­ƒÄ» Quick Test Commands:
--    make test_conformance  # Run conformance tests
--    make test_hardware     # Run hardware tests
CMake Warning at testing/CMakeLists.txt:117 (message):
--    make test_integration  # Run integration tests
--    make test_performance  # Run performance tests
--    make test_all          # Run all tests
-- 
-- ­ƒôè Building performance tests
  Python not found - skipping Python-based performance tests
-------------------------------------------------------
OpenAvnu Build information
Current compiler options:
-- Configuring done (0.5s)
    CC:                                 C:/Program Files/Microsoft Visual 
Studio/2022/Community/VC/Tools/MSVC/14.38.33130/bin/Hostx64/x64/cl.exe
    CXX:                                C:/Program Files/Microsoft Visual 
Studio/2022/Community/VC/Tools/MSVC/14.38.33130/bin/Hostx64/x64/cl.exe
    OpenAvnu CFLAGS:                    /DWIN32 /D_WINDOWS /W3
    OpenAvnu CXXFLAGS:                  /DWIN32 /D_WINDOWS /W3 /GR /EHsc
    OpenAvnu LDFLAGS:                   
Features configured in OpenAvnu root CMakeFile.txt:
    Memory Leak Detection:              ON
    Compiling Extensions:               ON
    Support Long Long:                  OFF
    Use OpenAvnu flags:                 
    Using Standard C library:           ON
    Using Standard C++ library:         ON
    Using C++11 library:                OFF
-------------------------------------------------------
-- Generating done (1.8s)
-- Build files have been written to: C:/Users/dzarf/Source/OpenAvnu/build
PASSED: CMake configuration successful

Step 2: Build Individual Daemons
--------------------------------

Building ALL_BUILD...
MSBuild-Version 17.14.14+a129329f1 f├╝r .NET Framework

  CppUTest.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\cpputest\src\CppUTest\Debug\CppUTest.lib
  CppUTestExt.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\cpputest\src\CppUTestExt\Debug\CppUTestExt.lib
  CppUTestExtTests.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\cpputest\tests\CppUTestExt\CppUTestExtTests.exe
  Discovering Tests in CppUTestExtTests
  TestGroup: TestOrderedTestMacros
  TestGroup: TestOrderedTest
  TestGroup: MockReturnValueTest
  TestGroup: MockStrictOrderTest
  TestGroup: MockSupport_c
  TestGroup: MockSupportTestWithFixture
  TestGroup: MockSupportTest
  TestGroup: MockPlugin
  TestGroup: MockParameterTest
  TestGroup: ComparatorsAndCopiersRepository
  TestGroup: MockHierarchyTest
  TestGroup: MockFailureTest
  TestGroup: MockExpectedCallsList
  TestGroup: MockIgnoredExpectedCall
  TestGroup: MockExpectedCallComposite
  TestGroup: MockExpectedCall
  TestGroup: MockNamedValueHandlerRepository
  TestGroup: MockComparatorCopierTest
  TestGroup: MockCallTest
  TestGroup: MockCheatSheet
  TestGroup: MockCheckedActualCall
  TestGroup: NormalMemoryReportFormatter
  TestGroup: MemoryReporterPlugin
  TestGroup: MemoryReportAllocator
  TestGroup: IEEE754ExceptionsPlugin2
  TestGroup: FE__with_Plugin
  TestGroup: CodeMemoryReportFormatter
  CppUTestTests.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\cpputest\tests\CppUTest\CppUTestTests.exe
  Discovering Tests in CppUTestTests
  TestGroup: TeamCityOutputTest
  TestGroup: UTestPlatformsTest_PlatformSpecificRunTestInASeperateProcess
  TestGroup: SimpleMutexTest
  TestGroup: CanHaveMemberVariablesInTestGroupThatAllocateMemoryWithoutCausingMemoryLeaks
  TestGroup: UtestMyOwn
  TestGroup: IgnoredUtestShell
  TestGroup: UtestShell
  TestGroup: UnitTestStringMacros
  TestGroup: UnitTestMacros
  TestGroup: TestResult
  TestGroup: PluginTest
  TestGroup: TestRegistry
  TestGroup: AllocLetTestFree
  TestGroup: CompositeTestOutput
  TestGroup: TestOutput
  TestGroup: MemoryLeakWarningThreadSafe
  TestGroup: MemoryLeakWarningGlobalDetectorTest
  TestGroup: MemoryLeakWarningTest
  TestGroup: MemoryLeakWarningLocalDetectorTest
  TestGroup: FailableMemoryAllocator
  TestGroup: TestMemoryAllocatorTest
  TestGroup: OutOfMemoryTestsForOperatorNew
  TestGroup: TestForExceptionsInConstructor
  TestGroup: MemoryLeakOverridesToBeUsedInProductionCode
  TestGroup: BasicBehavior
  TestGroup: TestInstaller
  TestGroup: ReallocBugReported
  TestGroup: SimpleStringBuffer
  TestGroup: MemoryLeakDetectorListTest
  TestGroup: MemoryLeakDetectorTest
  TestGroup: JUnitOutputTest
  TestGroup: TestHarness_c
  TestGroup: TestGroupInC
  TestGroup: TestFilter
  TestGroup: RunIgnoredTest
  TestGroup: CommandLineTestRunner
  TestGroup: TestFailureNanAndInf
  TestGroup: TestFailure
  TestGroup: CommandLineArguments
  TestGroup: SimpleString
  TestGroup: CheatSheet
  TestGroup: SetPointerPluginTest
  alltests.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\daemons\common\tests\Debug\alltests.exe
  clock_quality_demo.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\examples\clock_quality_demo\Debug\clock_quality_demo.exe
  clock_quality_tests_consolidated.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\testing\conformance\avnu_alliance\gptp\clock_quality\Debug\clock_quality_tests_consolidated.exe
  config_demo.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\examples\clock_quality_demo\Debug\config_demo.exe
  intel_device.c
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(32,1): warning C4005: "INTEL_HAL_WINDOWS": Makro-Neudefinition [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal-static.vcxproj]
  (Quelldatei ÔÇ×../../../thirdparty/intel-ethernet-hal/src/common/intel_device.cÔÇ£ wird kompiliert)
      C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(32,1):
      ÔÇ×INTEL_HAL_WINDOWSÔÇ£ wurde zuvor in der Befehlszeile deklariert
  
  intel_hal.c
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(32,1): warning C4005: "INTEL_HAL_WINDOWS": Makro-Neudefinition [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal-static.vcxproj]
  (Quelldatei ÔÇ×../../../thirdparty/intel-ethernet-hal/src/hal/intel_hal.cÔÇ£ wird kompiliert)
      C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(32,1):
      ÔÇ×INTEL_HAL_WINDOWSÔÇ£ wurde zuvor in der Befehlszeile deklariert
  
C:\Users\dzarf\Source\OpenAvnu\lib\intel_avb\lib\intel.h(62,1): warning C4005: "INTEL_CAP_MDIO": Makro-Neudefinition [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal-static.vcxproj]
  (Quelldatei ÔÇ×../../../thirdparty/intel-ethernet-hal/src/hal/intel_hal.cÔÇ£ wird kompiliert)
      C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(78,1):
      Siehe vorherige Definition von "INTEL_CAP_MDIO"
  
C:\Users\dzarf\Source\OpenAvnu\lib\intel_avb\lib\intel.h(63,1): warning C4005: "INTEL_CAP_MMIO": Makro-Neudefinition [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal-static.vcxproj]
  (Quelldatei ÔÇ×../../../thirdparty/intel-ethernet-hal/src/hal/intel_hal.cÔÇ£ wird kompiliert)
      C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(77,1):
      Siehe vorherige Definition von "INTEL_CAP_MMIO"
  
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\hal\intel_hal.c(374,12): warning C4477: "printf": Die Formatzeichenfolge "%lu" erfordert ein Argument vom Typ "unsigned long", das variadic-Argument "1" weist aber den Typ "const uint64_t" auf. [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal-static.vcxproj]
      C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\hal\intel_hal.c(374,12):
      Verwenden Sie ggf. "%llu" in der Formatzeichenfolge.
      C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\hal\intel_hal.c(374,12):
      Verwenden Sie ggf. "%Iu" in der Formatzeichenfolge.
      C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\hal\intel_hal.c(374,12):
      Verwenden Sie ggf. "%I64u" in der Formatzeichenfolge.
  
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\hal\intel_hal.c(441,9): warning C4101: "result": Unreferenzierte lokale Variable [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal-static.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\hal\intel_hal.c(439,36): warning C4101: "vfta_value": Unreferenzierte lokale Variable [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal-static.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\hal\intel_hal.c(475,25): warning C4101: "vte_value": Unreferenzierte lokale Variable [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal-static.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\hal\intel_hal.c(475,14): warning C4101: "vet_value": Unreferenzierte lokale Variable [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal-static.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\hal\intel_hal.c(585,30): warning C4245: "=": Konvertierung von "int" in "uint32_t", signed/unsigned-Konflikt. [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal-static.vcxproj]
  intel_ndis.c
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(32,1): warning C4005: "INTEL_HAL_WINDOWS": Makro-Neudefinition [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal-static.vcxproj]
  (Quelldatei ÔÇ×../../../thirdparty/intel-ethernet-hal/src/windows/intel_ndis.cÔÇ£ wird kompiliert)
      C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(32,1):
      ÔÇ×INTEL_HAL_WINDOWSÔÇ£ wurde zuvor in der Befehlszeile deklariert
  
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\windows\intel_ndis.c(104,1): warning C4211: Nicht dem Standard entsprechende Erweiterung: Neudefinition von extern als statisch [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal-static.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\windows\intel_ndis.c(312,9): warning C4996: 'GetVersionExA': wurde als veraltet deklariert [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal-static.vcxproj]
  Code wird generiert...
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\windows\intel_ndis.c(187): warning C4702: Unerreichbarer Code [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal-static.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\hal\intel_hal.c(359): warning C4702: Unerreichbarer Code [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal-static.vcxproj]
  intel-ethernet-hal-static.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\Debug\intel-ethernet-hal-static.lib
  daemon_cl.cpp
  intel_hal_vendor_extensions.cpp
  intel_wireless.cpp
  windows_crosststamp.cpp
C:\Users\dzarf\Source\OpenAvnu\thirdparty\gptp\windows\daemon_cl\windows_crosststamp.cpp(476,38): warning C4018: ">": Konflikt zwischen "signed" und "unsigned" [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\gptp\gptp.vcxproj]
  windows_hal.cpp
C:\Users\dzarf\Source\OpenAvnu\thirdparty\gptp\windows\daemon_cl\windows_hal.cpp(652,6): warning C4996: 'GetVersionExA': wurde als veraltet deklariert [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\gptp\gptp.vcxproj]
  windows_hal_common.cpp
  windows_hal_iphlpapi.cpp
  Code wird generiert...
  gptp.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\gptp\Debug\gptp.exe
  Copying gptp_cfg.ini to output directory	Copying test_milan_config.ini to output directory	Copying avnu_presonus_config.ini to output directory	Copying avnu_base_config.ini to output directory	Copying test_unified_profiles.ini to output directory
  grandmaster_tests.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\lib\avtp_pipeline\tests\Debug\grandmaster_tests.exe
  hal_device_info.c
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(32,1): warning C4005: "INTEL_HAL_WINDOWS": Makro-Neudefinition [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\examples\hal_device_info.vcxproj]
  (Quelldatei ÔÇ×../../../../thirdparty/intel-ethernet-hal/examples/hal_device_info.cÔÇ£ wird kompiliert)
      C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(32,1):
      ÔÇ×INTEL_HAL_WINDOWSÔÇ£ wurde zuvor in der Befehlszeile deklariert
  
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\examples\hal_device_info.c(18,26): warning C4100: "argv": Unreferenzierter formaler Parameter [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\examples\hal_device_info.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\examples\hal_device_info.c(18,14): warning C4100: "argc": Unreferenzierter formaler Parameter [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\examples\hal_device_info.vcxproj]
  hal_device_info.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\examples\Debug\hal_device_info.exe
  hal_enable_timestamping.c
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(32,1): warning C4005: "INTEL_HAL_WINDOWS": Makro-Neudefinition [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\examples\hal_enable_timestamping.vcxproj]
  (Quelldatei ÔÇ×../../../../thirdparty/intel-ethernet-hal/examples/hal_enable_timestamping.cÔÇ£ wird kompiliert)
      C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(32,1):
      ÔÇ×INTEL_HAL_WINDOWSÔÇ£ wurde zuvor in der Befehlszeile deklariert
  
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\examples\hal_enable_timestamping.c(27,26): warning C4100: "argv": Unreferenzierter formaler Parameter [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\examples\hal_enable_timestamping.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\examples\hal_enable_timestamping.c(27,14): warning C4100: "argc": Unreferenzierter formaler Parameter [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\examples\hal_enable_timestamping.vcxproj]
  hal_enable_timestamping.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\examples\Debug\hal_enable_timestamping.exe
  Building Custom Rule C:/Users/dzarf/Source/OpenAvnu/examples/CMakeLists.txt
  i219_vlan_qos_example_corrected.c
  i219_vlan_qos_example.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\examples\Debug\i219_vlan_qos_example.exe
  intel_device.c
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(32,1): warning C4005: "INTEL_HAL_WINDOWS": Makro-Neudefinition [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal.vcxproj]
  (Quelldatei ÔÇ×../../../thirdparty/intel-ethernet-hal/src/common/intel_device.cÔÇ£ wird kompiliert)
      C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(32,1):
      ÔÇ×INTEL_HAL_WINDOWSÔÇ£ wurde zuvor in der Befehlszeile deklariert
  
  intel_hal.c
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(32,1): warning C4005: "INTEL_HAL_WINDOWS": Makro-Neudefinition [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal.vcxproj]
  (Quelldatei ÔÇ×../../../thirdparty/intel-ethernet-hal/src/hal/intel_hal.cÔÇ£ wird kompiliert)
      C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(32,1):
      ÔÇ×INTEL_HAL_WINDOWSÔÇ£ wurde zuvor in der Befehlszeile deklariert
  
C:\Users\dzarf\Source\OpenAvnu\lib\intel_avb\lib\intel.h(62,1): warning C4005: "INTEL_CAP_MDIO": Makro-Neudefinition [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal.vcxproj]
  (Quelldatei ÔÇ×../../../thirdparty/intel-ethernet-hal/src/hal/intel_hal.cÔÇ£ wird kompiliert)
      C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(78,1):
      Siehe vorherige Definition von "INTEL_CAP_MDIO"
  
C:\Users\dzarf\Source\OpenAvnu\lib\intel_avb\lib\intel.h(63,1): warning C4005: "INTEL_CAP_MMIO": Makro-Neudefinition [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal.vcxproj]
  (Quelldatei ÔÇ×../../../thirdparty/intel-ethernet-hal/src/hal/intel_hal.cÔÇ£ wird kompiliert)
      C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(77,1):
      Siehe vorherige Definition von "INTEL_CAP_MMIO"
  
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\hal\intel_hal.c(374,12): warning C4477: "printf": Die Formatzeichenfolge "%lu" erfordert ein Argument vom Typ "unsigned long", das variadic-Argument "1" weist aber den Typ "const uint64_t" auf. [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal.vcxproj]
      C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\hal\intel_hal.c(374,12):
      Verwenden Sie ggf. "%llu" in der Formatzeichenfolge.
      C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\hal\intel_hal.c(374,12):
      Verwenden Sie ggf. "%Iu" in der Formatzeichenfolge.
      C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\hal\intel_hal.c(374,12):
      Verwenden Sie ggf. "%I64u" in der Formatzeichenfolge.
  
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\hal\intel_hal.c(441,9): warning C4101: "result": Unreferenzierte lokale Variable [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\hal\intel_hal.c(439,36): warning C4101: "vfta_value": Unreferenzierte lokale Variable [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\hal\intel_hal.c(475,25): warning C4101: "vte_value": Unreferenzierte lokale Variable [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\hal\intel_hal.c(475,14): warning C4101: "vet_value": Unreferenzierte lokale Variable [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\hal\intel_hal.c(585,30): warning C4245: "=": Konvertierung von "int" in "uint32_t", signed/unsigned-Konflikt. [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal.vcxproj]
  intel_ndis.c
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(32,1): warning C4005: "INTEL_HAL_WINDOWS": Makro-Neudefinition [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal.vcxproj]
  (Quelldatei ÔÇ×../../../thirdparty/intel-ethernet-hal/src/windows/intel_ndis.cÔÇ£ wird kompiliert)
      C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(32,1):
      ÔÇ×INTEL_HAL_WINDOWSÔÇ£ wurde zuvor in der Befehlszeile deklariert
  
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\windows\intel_ndis.c(104,1): warning C4211: Nicht dem Standard entsprechende Erweiterung: Neudefinition von extern als statisch [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\windows\intel_ndis.c(312,9): warning C4996: 'GetVersionExA': wurde als veraltet deklariert [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal.vcxproj]
  Code wird generiert...
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\windows\intel_ndis.c(187): warning C4702: Unerreichbarer Code [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\src\hal\intel_hal.c(359): warning C4702: Unerreichbarer Code [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\intel-ethernet-hal.vcxproj]
  intel-ethernet-hal.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\Debug\intel-ethernet-hal.dll
  intel_hal_full_test.c
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\tests\intel_hal_full_test.c(11,1): warning C4005: "WIN32_LEAN_AND_MEAN": Makro-Neudefinition [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\tests\intel_hal_full_test.vcxproj]
      C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\tests\intel_hal_full_test.c(11,1):
      ÔÇ×WIN32_LEAN_AND_MEANÔÇ£ wurde zuvor in der Befehlszeile deklariert
  
C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(32,1): warning C4005: "INTEL_HAL_WINDOWS": Makro-Neudefinition [C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\tests\intel_hal_full_test.vcxproj]
  (Quelldatei ÔÇ×../../../../thirdparty/intel-ethernet-hal/tests/intel_hal_full_test.cÔÇ£ wird kompiliert)
      C:\Users\dzarf\Source\OpenAvnu\thirdparty\intel-ethernet-hal\include\intel_ethernet_hal.h(32,1):
      ÔÇ×INTEL_HAL_WINDOWSÔÇ£ wurde zuvor in der Befehlszeile deklariert
  
  intel_hal_full_test.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\tests\Debug\intel_hal_full_test.exe
  intel_hal_validation_test.c
C:\Users\dzarf\Source\OpenAvnu\testing\hardware\intel\hal\intel_hal_validation_test.c(32,1): warning C4005: "WIN32_LEAN_AND_MEAN": Makro-Neudefinition [C:\Users\dzarf\Source\OpenAvnu\build\testing\hardware\intel\hal\intel_hal_validation_test_consolidated.vcxproj]
      C:\Users\dzarf\Source\OpenAvnu\testing\hardware\intel\hal\intel_hal_validation_test.c(32,1):
      ÔÇ×WIN32_LEAN_AND_MEANÔÇ£ wurde zuvor in der Befehlszeile deklariert
  
  LINK : C:\Users\dzarf\Source\OpenAvnu\build\tests\intel_hal_validation_test_consolidated.exe wurde nicht gefunden oder beim letzten inkrementellen Linkvorgang nicht erstellt; vollst├ñndiger Link wird durchgef├╝hrt.
  intel_hal_validation_test_consolidated.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\tests\intel_hal_validation_test_consolidated.exe
  la_networkInterfaceHelper_static.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\lib\la_avdecc\externals\nih\src\Debug\la_networkInterfaceHelper_static-d.lib
  la_avdecc_cxx.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\lib\la_avdecc\src\Debug\la_avdecc_cxx-d.dll
  	Copying la_avdecc_cxx symbols
  Touching C:/Users/dzarf/Source/OpenAvnu/build/lib/la_avdecc/src/Debug/la_avdecc_cxx-d.lib import library
     Bibliothek "C:/Users/dzarf/Source/OpenAvnu/build/lib/la_avdecc/src/controller/Debug/la_avdecc_controller_cxx-d.lib" und Objekt "C:/Users/dzarf/Source/OpenAvnu/build/lib/la_avdecc/src/controller/Debug/la_avdecc_controller_cxx-d.exp" werden erstellt.
  la_avdecc_controller_cxx.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\lib\la_avdecc\src\controller\Debug\la_avdecc_controller_cxx-d.dll
  	Copying la_avdecc_controller_cxx symbols
  Touching C:/Users/dzarf/Source/OpenAvnu/build/lib/la_avdecc/src/controller/Debug/la_avdecc_controller_cxx-d.lib import library
  la_avdecc_static.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\lib\la_avdecc\src\Debug\la_avdecc_static-d.lib
  la_avdecc_controller_static.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\lib\la_avdecc\src\controller\Debug\la_avdecc_controller_static-d.lib
  maap_intel_hal.c
C:\Users\dzarf\Source\OpenAvnu\daemons\maap\common\maap_intel_hal.c(63,5): warning C4002: Zu viele Argumente f├╝r den Aufruf des funktions├ñhnlichen Makros "MAAP_LOG_INFO". [C:\Users\dzarf\Source\OpenAvnu\build\daemons\maap\maap_daemon.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\daemons\maap\common\maap_intel_hal.c(77,9): warning C4002: Zu viele Argumente f├╝r den Aufruf des funktions├ñhnlichen Makros "MAAP_LOG_INFO". [C:\Users\dzarf\Source\OpenAvnu\build\daemons\maap\maap_daemon.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\daemons\maap\common\maap_intel_hal.c(86,9): warning C4002: Zu viele Argumente f├╝r den Aufruf des funktions├ñhnlichen Makros "MAAP_LOG_STATUS". [C:\Users\dzarf\Source\OpenAvnu\build\daemons\maap\maap_daemon.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\daemons\maap\common\maap_intel_hal.c(97,35): warning C4047: "Funktion": Anzahl der Dereferenzierungen bei "intel_device_t *" und "intel_device_t **" unterschiedlich [C:\Users\dzarf\Source\OpenAvnu\build\daemons\maap\maap_daemon.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\daemons\maap\common\maap_intel_hal.c(97,35): warning C4024: "intel_hal_get_device_info": unterschiedliche Typen f├╝r formalen und ├╝bergebenen Parameter 1 [C:\Users\dzarf\Source\OpenAvnu\build\daemons\maap\maap_daemon.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\daemons\maap\common\maap_intel_hal.c(99,9): warning C4002: Zu viele Argumente f├╝r den Aufruf des funktions├ñhnlichen Makros "MAAP_LOG_INFO". [C:\Users\dzarf\Source\OpenAvnu\build\daemons\maap\maap_daemon.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\daemons\maap\common\maap_intel_hal.c(102,38): warning C4047: "Funktion": Anzahl der Dereferenzierungen bei "intel_device_t *" und "intel_device_t **" unterschiedlich [C:\Users\dzarf\Source\OpenAvnu\build\daemons\maap\maap_daemon.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\daemons\maap\common\maap_intel_hal.c(102,38): warning C4024: "intel_hal_get_interface_info": unterschiedliche Typen f├╝r formalen und ├╝bergebenen Parameter 1 [C:\Users\dzarf\Source\OpenAvnu\build\daemons\maap\maap_daemon.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\daemons\maap\common\maap_intel_hal.c(107,1): warning C4002: Zu viele Argumente f├╝r den Aufruf des funktions├ñhnlichen Makros "MAAP_LOG_INFO". [C:\Users\dzarf\Source\OpenAvnu\build\daemons\maap\maap_daemon.vcxproj]
  maap_daemon.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\daemons\maap\Debug\maap_daemon.exe
  maap_test.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\daemons\maap\tests\Debug\maap_test.exe
  mrpd_intel_hal.c
C:\Users\dzarf\Source\OpenAvnu\daemons\common\mrpd_intel_hal.c(110,35): warning C4047: "Funktion": Anzahl der Dereferenzierungen bei "intel_device_t *" und "intel_device_t **" unterschiedlich [C:\Users\dzarf\Source\OpenAvnu\build\daemons\mrpd\mrpd.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\daemons\common\mrpd_intel_hal.c(110,35): warning C4024: "intel_hal_get_device_info": unterschiedliche Typen f├╝r formalen und ├╝bergebenen Parameter 1 [C:\Users\dzarf\Source\OpenAvnu\build\daemons\mrpd\mrpd.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\daemons\common\mrpd_intel_hal.c(115,38): warning C4047: "Funktion": Anzahl der Dereferenzierungen bei "intel_device_t *" und "intel_device_t **" unterschiedlich [C:\Users\dzarf\Source\OpenAvnu\build\daemons\mrpd\mrpd.vcxproj]
C:\Users\dzarf\Source\OpenAvnu\daemons\common\mrpd_intel_hal.c(115,38): warning C4024: "intel_hal_get_interface_info": unterschiedliche Typen f├╝r formalen und ├╝bergebenen Parameter 1 [C:\Users\dzarf\Source\OpenAvnu\build\daemons\mrpd\mrpd.vcxproj]
  mrpd.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\daemons\mrpd\Debug\mrpd.exe
  mrpd_simple_test.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\daemons\mrpd\tests\simple\Debug\mrpd_simple_test.exe
  named_pipe_test.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\gptp\windows\named_pipe_test\Debug\named_pipe_test.exe
  open1722.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\Debug\open1722.lib
  openavnu-avtp-open1722.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\lib\avtp_pipeline\avtp_open1722\Debug\openavnu-avtp-open1722.lib
  shaper_windows.c
  openavnu_shaper_windows.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\daemons\shaper\Debug\openavnu_shaper_windows.exe
  phase2_avb_integration_prototype.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\testing\integration\phase2\Debug\phase2_avb_integration_prototype.exe
  phase2_baseline_measurement.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\testing\performance\Debug\phase2_baseline_measurement.exe
  phase2_user_feedback_collection.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\testing\integration\phase2\Debug\phase2_user_feedback_collection.exe
  phase2_user_feedback_simulation.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\testing\integration\phase2\Debug\phase2_user_feedback_simulation.exe
  phase3_production_test_consolidated.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\testing\integration\phase3\Debug\phase3_production_test_consolidated.exe
  test-openavnu-avtp-open1722.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\lib\avtp_pipeline\avtp_open1722\Debug\test-openavnu-avtp-open1722.exe
  test_avtp_profile_validation.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\testing\Debug\test_avtp_profile_validation.exe
  test_intervals.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\daemons\maap\test\Debug\test_intervals.exe
  test_phase2_backend_integration_consolidated.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\testing\integration\phase2\Debug\test_phase2_backend_integration_consolidated.exe
PASSED: ALL_BUILD completed successfully

Building Intel HAL Tests...
MSBuild-Version 17.14.14+a129329f1 f├╝r .NET Framework

  intel-ethernet-hal-static.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\Debug\intel-ethernet-hal-static.lib
  intel_hal_validation_test_consolidated.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\tests\intel_hal_validation_test_consolidated.exe
PASSED: Intel HAL Tests built successfully

Building Clock Quality Tests...
MSBuild-Version 17.14.14+a129329f1 f├╝r .NET Framework

  clock_quality_tests_consolidated.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\testing\conformance\avnu_alliance\gptp\clock_quality\Debug\clock_quality_tests_consolidated.exe
PASSED: Clock Quality Tests built successfully

Building gPTP Daemon...
MSBuild-Version 17.14.14+a129329f1 f├╝r .NET Framework

  intel-ethernet-hal-static.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\intel-ethernet-hal\Debug\intel-ethernet-hal-static.lib
  gptp.vcxproj -> C:\Users\dzarf\Source\OpenAvnu\build\thirdparty\gptp\Debug\gptp.exe
  Copying gptp_cfg.ini to output directory	Copying test_milan_config.ini to output directory	Copying avnu_presonus_config.ini to output directory	Copying avnu_base_config.ini to output directory	Copying test_unified_profiles.ini to output directory
PASSED: gPTP Daemon built successfully

Step 3: Basic Functionality Tests
--------------------------------

Testing Intel HAL Tests basic functionality...
PASSED: Intel HAL Tests responds to help command

Testing Clock Quality Tests basic functionality...
PASSED: Clock Quality Tests responds to help command

Testing gPTP Daemon basic functionality...
WARNING: gPTP Daemon help command unclear (Exit Code: -1)

=============================================
  BUILD VERIFICATION SUMMARY
=============================================

Configuration Time: 2.42 seconds
Total Daemons: 4
Successful Builds: 4
Failed Builds: 0

ALL_BUILD: PASSED (32s)
Intel HAL Tests: PASSED (1.02s)
Clock Quality Tests: PASSED (0.92s)
gPTP Daemon: PASSED (1.32s)

ALL BUILDS PASSED! OpenAvnu daemons are ready for deployment.
