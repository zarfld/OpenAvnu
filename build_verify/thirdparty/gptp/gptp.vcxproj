<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{9910164C-C4C3-3761-B45B-4F2A5B9A169E}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>gptp</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
    <UseDebugLibraries>false</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
    <UseDebugLibraries>false</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
    <UseDebugLibraries>false</UseDebugLibraries>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\Repos\OpenAvnu\build_verify\thirdparty\gptp\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">gptp.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">gptp</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\Repos\OpenAvnu\build_verify\thirdparty\gptp\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">gptp.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">gptp</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\Repos\OpenAvnu\build_verify\thirdparty\gptp\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">gptp.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">gptp</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\Repos\OpenAvnu\build_verify\thirdparty\gptp\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">gptp.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">gptp</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Repos\OpenAvnu\thirdparty\gptp\.\common;D:\Repos\OpenAvnu\thirdparty\gptp\include;D:\Repos\OpenAvnu\thirdparty\gptp\.\windows\daemon_cl;D:\Repos\npcap-sdk\Include\..\Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /FS</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <MinimalRebuild></MinimalRebuild>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <SupportJustMyCode></SupportJustMyCode>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;USING_NPCAP;_CRT_SECURE_NO_WARNINGS;HAVE_REMOTE;CMAKE_INTDIR="Debug"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;USING_NPCAP;_CRT_SECURE_NO_WARNINGS;HAVE_REMOTE;CMAKE_INTDIR=\"Debug\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Repos\OpenAvnu\thirdparty\gptp\.\common;D:\Repos\OpenAvnu\thirdparty\gptp\include;D:\Repos\OpenAvnu\thirdparty\gptp\.\windows\daemon_cl;D:\Repos\npcap-sdk\Include\..\Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Repos\OpenAvnu\thirdparty\gptp\.\common;D:\Repos\OpenAvnu\thirdparty\gptp\include;D:\Repos\OpenAvnu\thirdparty\gptp\.\windows\daemon_cl;D:\Repos\npcap-sdk\Include\..\Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>Copying gptp_cfg.ini to output directory	Copying test_milan_config.ini to output directory	Copying avnu_presonus_config.ini to output directory	Copying avnu_base_config.ini to output directory	Copying test_unified_profiles.ini to output directory</Message>
      <Command>setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different D:/Repos/OpenAvnu/thirdparty/gptp/gptp_cfg.ini D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/Debug/gptp_cfg.ini
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different D:/Repos/OpenAvnu/thirdparty/gptp/test_milan_config.ini D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/Debug/test_milan_config.ini
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different D:/Repos/OpenAvnu/thirdparty/gptp/avnu_presonus_config.ini D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/Debug/avnu_presonus_config.ini
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different D:/Repos/OpenAvnu/thirdparty/gptp/avnu_base_config.ini D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/Debug/avnu_base_config.ini
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different D:/Repos/OpenAvnu/thirdparty/gptp/test_unified_profiles.ini D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/Debug/test_unified_profiles.ini
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>wpcap.lib;Iphlpapi.lib;Ws2_32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>D:/Repos/npcap-sdk/Include/../Lib/x64;D:/Repos/npcap-sdk/Include/../Lib/x64/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/Debug/gptp.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/Debug/gptp.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <Manifest>
      <AdditionalManifestFiles>D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\gptp.manifest;</AdditionalManifestFiles>
    </Manifest>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Repos\OpenAvnu\thirdparty\gptp\.\common;D:\Repos\OpenAvnu\thirdparty\gptp\include;D:\Repos\OpenAvnu\thirdparty\gptp\.\windows\daemon_cl;D:\Repos\npcap-sdk\Include\..\Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /FS</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <MinimalRebuild></MinimalRebuild>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <SupportJustMyCode></SupportJustMyCode>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;USING_NPCAP;_CRT_SECURE_NO_WARNINGS;HAVE_REMOTE;CMAKE_INTDIR="Release"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;USING_NPCAP;_CRT_SECURE_NO_WARNINGS;HAVE_REMOTE;CMAKE_INTDIR=\"Release\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Repos\OpenAvnu\thirdparty\gptp\.\common;D:\Repos\OpenAvnu\thirdparty\gptp\include;D:\Repos\OpenAvnu\thirdparty\gptp\.\windows\daemon_cl;D:\Repos\npcap-sdk\Include\..\Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Repos\OpenAvnu\thirdparty\gptp\.\common;D:\Repos\OpenAvnu\thirdparty\gptp\include;D:\Repos\OpenAvnu\thirdparty\gptp\.\windows\daemon_cl;D:\Repos\npcap-sdk\Include\..\Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>Copying gptp_cfg.ini to output directory	Copying test_milan_config.ini to output directory	Copying avnu_presonus_config.ini to output directory	Copying avnu_base_config.ini to output directory	Copying test_unified_profiles.ini to output directory</Message>
      <Command>setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different D:/Repos/OpenAvnu/thirdparty/gptp/gptp_cfg.ini D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/Release/gptp_cfg.ini
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different D:/Repos/OpenAvnu/thirdparty/gptp/test_milan_config.ini D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/Release/test_milan_config.ini
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different D:/Repos/OpenAvnu/thirdparty/gptp/avnu_presonus_config.ini D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/Release/avnu_presonus_config.ini
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different D:/Repos/OpenAvnu/thirdparty/gptp/avnu_base_config.ini D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/Release/avnu_base_config.ini
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different D:/Repos/OpenAvnu/thirdparty/gptp/test_unified_profiles.ini D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/Release/test_unified_profiles.ini
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>wpcap.lib;Iphlpapi.lib;Ws2_32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>D:/Repos/npcap-sdk/Include/../Lib/x64;D:/Repos/npcap-sdk/Include/../Lib/x64/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/Release/gptp.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/Release/gptp.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <Manifest>
      <AdditionalManifestFiles>D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\gptp.manifest;</AdditionalManifestFiles>
    </Manifest>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Repos\OpenAvnu\thirdparty\gptp\.\common;D:\Repos\OpenAvnu\thirdparty\gptp\include;D:\Repos\OpenAvnu\thirdparty\gptp\.\windows\daemon_cl;D:\Repos\npcap-sdk\Include\..\Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /FS</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <MinimalRebuild></MinimalRebuild>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <SupportJustMyCode></SupportJustMyCode>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;USING_NPCAP;_CRT_SECURE_NO_WARNINGS;HAVE_REMOTE;CMAKE_INTDIR="MinSizeRel"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;USING_NPCAP;_CRT_SECURE_NO_WARNINGS;HAVE_REMOTE;CMAKE_INTDIR=\"MinSizeRel\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Repos\OpenAvnu\thirdparty\gptp\.\common;D:\Repos\OpenAvnu\thirdparty\gptp\include;D:\Repos\OpenAvnu\thirdparty\gptp\.\windows\daemon_cl;D:\Repos\npcap-sdk\Include\..\Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Repos\OpenAvnu\thirdparty\gptp\.\common;D:\Repos\OpenAvnu\thirdparty\gptp\include;D:\Repos\OpenAvnu\thirdparty\gptp\.\windows\daemon_cl;D:\Repos\npcap-sdk\Include\..\Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>Copying gptp_cfg.ini to output directory	Copying test_milan_config.ini to output directory	Copying avnu_presonus_config.ini to output directory	Copying avnu_base_config.ini to output directory	Copying test_unified_profiles.ini to output directory</Message>
      <Command>setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different D:/Repos/OpenAvnu/thirdparty/gptp/gptp_cfg.ini D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/MinSizeRel/gptp_cfg.ini
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different D:/Repos/OpenAvnu/thirdparty/gptp/test_milan_config.ini D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/MinSizeRel/test_milan_config.ini
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different D:/Repos/OpenAvnu/thirdparty/gptp/avnu_presonus_config.ini D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/MinSizeRel/avnu_presonus_config.ini
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different D:/Repos/OpenAvnu/thirdparty/gptp/avnu_base_config.ini D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/MinSizeRel/avnu_base_config.ini
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different D:/Repos/OpenAvnu/thirdparty/gptp/test_unified_profiles.ini D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/MinSizeRel/test_unified_profiles.ini
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>wpcap.lib;Iphlpapi.lib;Ws2_32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>D:/Repos/npcap-sdk/Include/../Lib/x64;D:/Repos/npcap-sdk/Include/../Lib/x64/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/MinSizeRel/gptp.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/MinSizeRel/gptp.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <Manifest>
      <AdditionalManifestFiles>D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\gptp.manifest;</AdditionalManifestFiles>
    </Manifest>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Repos\OpenAvnu\thirdparty\gptp\.\common;D:\Repos\OpenAvnu\thirdparty\gptp\include;D:\Repos\OpenAvnu\thirdparty\gptp\.\windows\daemon_cl;D:\Repos\npcap-sdk\Include\..\Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /FS</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <MinimalRebuild></MinimalRebuild>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <SupportJustMyCode></SupportJustMyCode>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;USING_NPCAP;_CRT_SECURE_NO_WARNINGS;HAVE_REMOTE;CMAKE_INTDIR="RelWithDebInfo"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;USING_NPCAP;_CRT_SECURE_NO_WARNINGS;HAVE_REMOTE;CMAKE_INTDIR=\"RelWithDebInfo\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Repos\OpenAvnu\thirdparty\gptp\.\common;D:\Repos\OpenAvnu\thirdparty\gptp\include;D:\Repos\OpenAvnu\thirdparty\gptp\.\windows\daemon_cl;D:\Repos\npcap-sdk\Include\..\Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Repos\OpenAvnu\thirdparty\gptp\.\common;D:\Repos\OpenAvnu\thirdparty\gptp\include;D:\Repos\OpenAvnu\thirdparty\gptp\.\windows\daemon_cl;D:\Repos\npcap-sdk\Include\..\Include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <PostBuildEvent>
      <Message>Copying gptp_cfg.ini to output directory	Copying test_milan_config.ini to output directory	Copying avnu_presonus_config.ini to output directory	Copying avnu_base_config.ini to output directory	Copying test_unified_profiles.ini to output directory</Message>
      <Command>setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different D:/Repos/OpenAvnu/thirdparty/gptp/gptp_cfg.ini D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/RelWithDebInfo/gptp_cfg.ini
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different D:/Repos/OpenAvnu/thirdparty/gptp/test_milan_config.ini D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/RelWithDebInfo/test_milan_config.ini
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different D:/Repos/OpenAvnu/thirdparty/gptp/avnu_presonus_config.ini D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/RelWithDebInfo/avnu_presonus_config.ini
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different D:/Repos/OpenAvnu/thirdparty/gptp/avnu_base_config.ini D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/RelWithDebInfo/avnu_base_config.ini
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd
setlocal
"C:\Program Files\CMake\bin\cmake.exe" -E copy_if_different D:/Repos/OpenAvnu/thirdparty/gptp/test_unified_profiles.ini D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/RelWithDebInfo/test_unified_profiles.ini
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
    </PostBuildEvent>
    <Link>
      <AdditionalDependencies>wpcap.lib;Iphlpapi.lib;Ws2_32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>D:/Repos/npcap-sdk/Include/../Lib/x64;D:/Repos/npcap-sdk/Include/../Lib/x64/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/RelWithDebInfo/gptp.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/RelWithDebInfo/gptp.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
    <Manifest>
      <AdditionalManifestFiles>D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\gptp.manifest;</AdditionalManifestFiles>
    </Manifest>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\Repos\OpenAvnu\thirdparty\gptp\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/Repos/OpenAvnu/thirdparty/gptp/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/Repos/OpenAvnu -BD:/Repos/OpenAvnu/build_verify --check-stamp-file D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">C:\Program Files\CMake\share\cmake-4.0\Modules\CheckCXXCompilerFlag.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\Repos\OpenAvnu\build_verify\thirdparty\gptp\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/Repos/OpenAvnu/thirdparty/gptp/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/Repos/OpenAvnu -BD:/Repos/OpenAvnu/build_verify --check-stamp-file D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">C:\Program Files\CMake\share\cmake-4.0\Modules\CheckCXXCompilerFlag.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\Repos\OpenAvnu\build_verify\thirdparty\gptp\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/Repos/OpenAvnu/thirdparty/gptp/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/Repos/OpenAvnu -BD:/Repos/OpenAvnu/build_verify --check-stamp-file D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">C:\Program Files\CMake\share\cmake-4.0\Modules\CheckCXXCompilerFlag.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\Repos\OpenAvnu\build_verify\thirdparty\gptp\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/Repos/OpenAvnu/thirdparty/gptp/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"C:\Program Files\CMake\bin\cmake.exe" -SD:/Repos/OpenAvnu -BD:/Repos/OpenAvnu/build_verify --check-stamp-file D:/Repos/OpenAvnu/build_verify/thirdparty/gptp/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">C:\Program Files\CMake\share\cmake-4.0\Modules\CheckCXXCompilerFlag.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\Repos\OpenAvnu\build_verify\thirdparty\gptp\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\common\ap_message.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\common\avbts_osnet.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\common\common_port.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\common\ether_port.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\common\gptp_cfg.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\common\gptp_clock_quality.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\common\gptp_clock_quality_config.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\common\gptp_log.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\common\gptp_profile.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\common\ieee1588clock.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\common\ini.c" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\common\milan_profile.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\common\ptp_message.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\common\wireless_port.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\common\wireless_tstamper.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\IPCListener.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\daemon_cl.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\intel_hal_vendor_extensions.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\intel_wireless.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\packet.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\platform.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\stdafx.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\test_crosststamp.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\watchdog.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\windows_crosststamp.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\windows_crosststamp_simple.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\windows_driver_info.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\windows_driver_info_minimal.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\windows_hal.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\windows_hal_common.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\windows_hal_iphlpapi.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\windows_hal_ndis.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\windows_hal_vendor_intel.cpp" />
    <ClCompile Include="D:\Repos\OpenAvnu\thirdparty\gptp\windows\daemon_cl\work_queue.cpp" />
  </ItemGroup>
  <ItemGroup />
  <ItemGroup>
    <ProjectReference Include="D:\Repos\OpenAvnu\build_verify\ZERO_CHECK.vcxproj">
      <Project>{FC89F9E1-C6FA-31CA-94DA-25D0D726CA35}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>