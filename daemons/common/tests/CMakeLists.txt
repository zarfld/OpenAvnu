cmake_minimum_required (VERSION 3.10) 
project (mrpd_simple_test)
enable_testing()

set (CPPUTEST_DIR "${CMAKE_CURRENT_LIST_DIR}/../../../thirdparty/cpputest" )
set (SRC_DIR ".." )
add_definitions(-DMRP_CPPUTEST)

include_directories( . "${CMAKE_CURRENT_LIST_DIR}/../" ${CPPUTEST_DIR}/include )
file(GLOB CPPUTEST_SRC *.cpp)
file(GLOB EUI64SET_SRC ${SRC_DIR}/eui64set.c)

if(APPLE)
  include_directories( include ${CPPUTEST_DIR}/include/Platforms/Gcc )
  link_directories(${CPPUTEST_DIR}/src/CppUTest ${CPPUTEST_DIR}/src/CppUTestExt )
  add_executable (alltests ${EUI64SET_SRC} ${CPPUTEST_SRC} )
  target_link_libraries(alltests CppUTest CppUTestExt)
elseif(UNIX)
  include_directories( include ${CPPUTEST_DIR}/include/Platforms/Gcc )
  link_directories(${CPPUTEST_DIR}/src/CppUTest ${CPPUTEST_DIR}/src/CppUTestExt )
  add_executable (alltests ${EUI64SET_SRC} ${CPPUTEST_SRC} )
  target_link_libraries(alltests CppUTest CppUTestExt)
elseif(WIN32)
  if( CMAKE_SIZEOF_VOID_P EQUAL 8 )
    link_directories($ENV{WPCAP_DIR}/Lib/x64 ${CPPUTEST_DIR}/src/CppUTest ${CPPUTEST_DIR}/src/CppUTestExt)
  elseif( CMAKE_SIZEOF_VOID_P EQUAL 4 )
    link_directories($ENV{WPCAP_DIR}/Lib ${CPPUTEST_DIR}/src/CppUTest ${CPPUTEST_DIR}/src/CppUTestExt)
  endif()

  add_definitions(-D_CRT_SECURE_NO_WARNINGS)
  add_executable (alltests ${EUI64SET_SRC} ${CPPUTEST_SRC} )
  target_link_libraries(alltests CppUTest CppUTestExt)
endif()

add_test( alltests alltests )
