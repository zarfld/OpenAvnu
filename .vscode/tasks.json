{
	"version": "2.0.0",
	// gPTP Integration Tasks:
	// - Apply gPTP Windows Build Fix: Fixes config file path issues in gPTP CMakeLists.txt
	// - Run gPTP Daemon (Windows/Linux): Starts gPTP daemon in background
	// - Verify gPTP Integration: Runs verification script to check integration
	// - Build gPTP Only: Builds just the gPTP target
	// - CMake Configure with gPTP: Configures build with gPTP explicitly enabled
	"tasks": [
		{
			"label": "Build All (Windows - CMake)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				".",
				"--config",
				"Release"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": {
				"kind": "build",
				"isDefault": true
			},
			"problemMatcher": [
				"$msCompile"
			],
			"isBackground": false,
			"dependsOn": "CMake Configure (Windows)",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			}
		},
		{
			"label": "Build All (Linux/WSL)",
			"type": "shell",
			"command": "wsl",
			"args": [
				"make",
				"all"
			],
			"group": "build",
			"problemMatcher": [
				"$gcc"
			],
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			}
		},
		{
			"label": "Install WSL Ubuntu (Required for Linux builds)",
			"type": "shell",
			"command": "wsl",
			"args": [
				"--install",
				"-d",
				"Ubuntu"
			],
			"group": "build",
			"problemMatcher": [],
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "new"
			}
		},
		{
			"label": "Clean All (Windows)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				".",
				"--config",
				"Release",
				"--target",
				"clean"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [],
			"isBackground": false
		},
		{
			"label": "Clean All (Linux/WSL)",
			"type": "shell",
			"command": "wsl",
			"args": [
				"make",
				"clean"
			],
			"group": "build",
			"problemMatcher": [],
			"isBackground": false
		},
		{
			"label": "CMake Configure (Windows)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"..",
				"-G",
				"Visual Studio 17 2022"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [],
			"isBackground": false,
			"dependsOn": "Create Build Directory"
		},
		{
			"label": "CMake Configure (Linux/WSL)",
			"type": "shell",
			"command": "wsl",
			"args": [
				"cmake",
				"..",
				"-G",
				"Unix Makefiles"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [
				"$gcc"
			],
			"isBackground": false,
			"dependsOn": "Create Build Directory"
		},
		{
			"label": "CMake Build (Windows)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				".",
				"--config",
				"Release"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [
				"$msCompile"
			],
			"isBackground": false,
			"dependsOn": "CMake Configure (Windows)"
		},
		{
			"label": "CMake Build (Linux/WSL)",
			"type": "shell",
			"command": "wsl",
			"args": [
				"make"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [
				"$gcc"
			],
			"isBackground": false,
			"dependsOn": "CMake Configure (Linux/WSL)"
		},
		{
			"label": "CMake Test (Windows)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				".",
				"--config",
				"Release",
				"--target",
				"RUN_TESTS"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "test",
			"problemMatcher": [
				"$msCompile"
			],
			"isBackground": false,
			"dependsOn": "CMake Build (Windows)"
		},
		{
			"label": "CMake Test (Linux/WSL)",
			"type": "shell",
			"command": "wsl",
			"args": [
				"make",
				"test"
			],
			"options": {
				"cwd": "${workspaceFolder}/build",
				"env": {
					"ARGS": "--output-on-failure"
				}
			},
			"group": "test",
			"problemMatcher": [
				"$gcc"
			],
			"isBackground": false,
			"dependsOn": "CMake Build (Linux/WSL)"
		},
		{
			"label": "Build Daemons (Linux/WSL)",
			"type": "shell",
			"command": "wsl",
			"args": [
				"make",
				"daemons_all"
			],
			"group": "build",
			"problemMatcher": [
				"$gcc"
			],
			"isBackground": false
		},
		{
			"label": "Build Examples (Linux/WSL)",
			"type": "shell",
			"command": "wsl",
			"args": [
				"make",
				"examples_all"
			],
			"group": "build",
			"problemMatcher": [
				"$gcc"
			],
			"isBackground": false
		},
		{
			"label": "Build AVTP Pipeline (Linux/WSL)",
			"type": "shell",
			"command": "wsl",
			"args": [
				"make",
				"avtp_pipeline"
			],
			"group": "build",
			"problemMatcher": [
				"$gcc"
			],
			"isBackground": false
		},
		{
			"label": "Build AVTP AVDECC (Linux/WSL)",
			"type": "shell",
			"command": "wsl",
			"args": [
				"make",
				"avtp_avdecc"
			],
			"group": "build",
			"problemMatcher": [
				"$gcc"
			],
			"isBackground": false
		},
		{
			"label": "Build Libraries (Linux/WSL)",
			"type": "shell",
			"command": "wsl",
			"args": [
				"make",
				"lib"
			],
			"group": "build",
			"problemMatcher": [
				"$gcc"
			],
			"isBackground": false
		},
		{
			"label": "Build ATL Library (Linux/WSL)",
			"type": "shell",
			"command": "wsl",
			"args": [
				"make",
				"atl_lib"
			],
			"group": "build",
			"problemMatcher": [
				"$gcc"
			],
			"isBackground": false
		},
		{
			"label": "Build Simple Talker (Linux/WSL)",
			"type": "shell",
			"command": "wsl",
			"args": [
				"make",
				"simple_talker"
			],
			"group": "build",
			"problemMatcher": [
				"$gcc"
			],
			"isBackground": false
		},
		{
			"label": "Build Simple Listener (Linux/WSL)",
			"type": "shell",
			"command": "wsl",
			"args": [
				"make",
				"simple_listener"
			],
			"group": "build",
			"problemMatcher": [
				"$gcc"
			],
			"isBackground": false
		},
		{
			"label": "Build MRP Client (Linux/WSL)",
			"type": "shell",
			"command": "wsl",
			"args": [
				"make",
				"mrp_client"
			],
			"group": "build",
			"problemMatcher": [
				"$gcc"
			],
			"isBackground": false
		},
		{
			"label": "Create Build Directory",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"if (!(Test-Path 'build')) { New-Item -ItemType Directory -Path 'build' }"
			],
			"group": "build",
			"problemMatcher": [],
			"isBackground": false
		},
		{
			"label": "Generate AVTP Pipeline Documentation (Linux/WSL)",
			"type": "shell",
			"command": "wsl",
			"args": [
				"make",
				"avtp_pipeline_doc"
			],
			"group": "build",
			"problemMatcher": [],
			"isBackground": false
		},
		{
			"label": "Generate AVTP AVDECC Documentation (Linux/WSL)",
			"type": "shell",
			"command": "wsl",
			"args": [
				"make",
				"avtp_avdecc_doc"
			],
			"group": "build",
			"problemMatcher": [],
			"isBackground": false
		},
		{
			"label": "Initialize Git Submodules",
			"type": "shell",
			"command": "git",
			"args": [
				"submodule",
				"update",
				"--init",
				"--recursive"
			],
			"group": "build",
			"problemMatcher": [],
			"isBackground": false
		},
		{
			"label": "Build All Debug (Windows - CMake)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				".",
				"--config",
				"Debug"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [
				"$msCompile"
			],
			"isBackground": false,
			"dependsOn": "CMake Configure (Windows)",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			}
		},
		{
			"label": "Build All RelWithDebInfo (Windows - CMake)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				".",
				"--config",
				"RelWithDebInfo"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [
				"$msCompile"
			],
			"isBackground": false,
			"dependsOn": "CMake Configure (Windows)",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			}
		},
		{
			"label": "CMake Build Debug (Windows)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				".",
				"--config",
				"Debug"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [
				"$msCompile"
			],
			"isBackground": false,
			"dependsOn": "CMake Configure (Windows)"
		},
		{
			"label": "CMake Build RelWithDebInfo (Windows)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				".",
				"--config",
				"RelWithDebInfo"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [
				"$msCompile"
			],
			"isBackground": false,
			"dependsOn": "CMake Configure (Windows)"
		},
		{
			"label": "Clean Debug (Windows)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				".",
				"--config",
				"Debug",
				"--target",
				"clean"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [],
			"isBackground": false
		},
		{
			"label": "Clean RelWithDebInfo (Windows)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				".",
				"--config",
				"RelWithDebInfo",
				"--target",
				"clean"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [],
			"isBackground": false
		},
		{
			"label": "CMake Test Debug (Windows)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				".",
				"--config",
				"Debug",
				"--target",
				"RUN_TESTS"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "test",
			"problemMatcher": [
				"$msCompile"
			],
			"isBackground": false,
			"dependsOn": "CMake Build Debug (Windows)"
		},
		{
			"label": "CMake Test RelWithDebInfo (Windows)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				".",
				"--config",
				"RelWithDebInfo",
				"--target",
				"RUN_TESTS"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "test",
			"problemMatcher": [
				"$msCompile"
			],
			"isBackground": false,
			"dependsOn": "CMake Build RelWithDebInfo (Windows)"
		},
		{
			"label": "Build MAAP Daemon Debug (Windows)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				".",
				"--config",
				"Debug",
				"--target",
				"maap_daemon"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [
				"$msCompile"
			],
			"isBackground": false,
			"dependsOn": "CMake Configure (Windows)"
		},
		{
			"label": "Build MRPD Daemon Debug (Windows)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				".",
				"--config",
				"Debug",
				"--target",
				"mrpd"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [
				"$msCompile"
			],
			"isBackground": false,
			"dependsOn": "CMake Configure (Windows)"
		},
		{
			"label": "Build CppUTest Debug (Windows)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				".",
				"--config",
				"Debug",
				"--target",
				"CppUTest"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [
				"$msCompile"
			],
			"isBackground": false,
			"dependsOn": "CMake Configure (Windows)"
		},
		{
			"label": "Run CppUTest Tests Debug (Windows)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				".",
				"--config",
				"Debug",
				"--target",
				"CppUTestTests"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "test",
			"problemMatcher": [
				"$msCompile"
			],
			"isBackground": false,
			"dependsOn": "Build CppUTest Debug (Windows)"
		},
		{
			"label": "Build and Run MRPD Simple Test Debug (Windows)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				".",
				"--config",
				"Debug",
				"--target",
				"mrpd_simple_test"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "test",
			"problemMatcher": [
				"$msCompile"
			],
			"isBackground": false,
			"dependsOn": "CMake Configure (Windows)"
		},
		{
			"label": "Build MAAP Test Debug (Windows)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				".",
				"--config",
				"Debug",
				"--target",
				"maap_test"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "test",
			"problemMatcher": [
				"$msCompile"
			],
			"isBackground": false,
			"dependsOn": "CMake Configure (Windows)"
		},
		{
			"label": "Test Modernized Windows Code",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				".",
				"--config",
				"Debug",
				"--target",
				"maap_daemon"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "test",
			"problemMatcher": [
				"$msCompile"
			],
			"isBackground": false,
			"dependsOn": "CMake Configure (Windows)",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			}
		},
		{
			"label": "Apply gPTP Windows Build Fix",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-Command",
				"(Get-Content 'thirdparty/gptp/CMakeLists.txt') -replace '\\$\\{CMAKE_SOURCE_DIR\\}', '${CMAKE_CURRENT_SOURCE_DIR}' | Set-Content 'thirdparty/gptp/CMakeLists.txt'"
			],
			"group": "build",
			"problemMatcher": [],
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			}
		},
		{
			"label": "Run gPTP Daemon (Windows)",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"run_gptp.ps1"
			],
			"group": "build",
			"problemMatcher": [],
			"isBackground": true,
			"dependsOn": "Build All (Windows - CMake)",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "dedicated"
			}
		},
		{
			"label": "Run gPTP Daemon (Linux/WSL)",
			"type": "shell",
			"command": "wsl",
			"args": [
				"bash",
				"run_gptp.sh"
			],
			"group": "build",
			"problemMatcher": [],
			"isBackground": true,
			"dependsOn": "Build All (Linux/WSL)",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "dedicated"
			}
		},
		{
			"label": "Verify gPTP Integration",
			"type": "shell",
			"command": "powershell",
			"args": [
				"-ExecutionPolicy",
				"Bypass",
				"-File",
				"verify_gptp_integration.ps1"
			],
			"group": "test",
			"problemMatcher": [],
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			}
		},
		{
			"label": "Build gPTP Only (Windows)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				".",
				"--config",
				"Release",
				"--target",
				"gptp2"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [
				"$msCompile"
			],
			"isBackground": false,
			"dependsOn": "CMake Configure (Windows)",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			}
		},
		{
			"label": "Build gPTP Only (Linux/WSL)",
			"type": "shell",
			"command": "wsl",
			"args": [
				"cmake",
				"--build",
				".",
				"--target",
				"gptp2"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [
				"$gcc"
			],
			"isBackground": false,
			"dependsOn": "CMake Configure (Linux/WSL)",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			}
		},
		{
			"label": "CMake Configure with gPTP (Windows)",
			"type": "shell",
			"command": "cmake",
			"args": [
				"..",
				"-G",
				"Visual Studio 17 2022",
				"-DOPENAVNU_BUILD_GPTP=ON"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [],
			"isBackground": false,
			"dependsOn": "Create Build Directory",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			}
		},
		{
			"label": "CMake Configure with gPTP (Linux/WSL)",
			"type": "shell",
			"command": "wsl",
			"args": [
				"cmake",
				"..",
				"-G",
				"Unix Makefiles",
				"-DOPENAVNU_BUILD_GPTP=ON"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "build",
			"problemMatcher": [
				"$gcc"
			],
			"isBackground": false,
			"dependsOn": "Create Build Directory",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": false,
				"panel": "shared"
			}
		},
		{
			"label": "Open gPTP Documentation",
			"type": "shell",
			"command": "code",
			"args": [
				"docs/gPTP_Integration.md"
			],
			"group": "build",
			"problemMatcher": [],
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "never",
				"focus": false,
				"panel": "shared"
			}
		},
		{
			"label": "Open gPTP Windows Build Fix Guide",
			"type": "shell",
			"command": "code",
			"args": [
				"gptp_windows_build_fix.md"
			],
			"group": "build",
			"problemMatcher": [],
			"isBackground": false,
			"presentation": {
				"echo": true,
				"reveal": "never",
				"focus": false,
				"panel": "shared"
			}
		},
		{
			"label": "Test Modernized Windows Code",
			"type": "shell",
			"command": "cmake",
			"args": [
				"--build",
				".",
				"--config",
				"Debug",
				"--target",
				"maap_daemon"
			],
			"options": {
				"cwd": "${workspaceFolder}/build"
			},
			"group": "test",
			"problemMatcher": [
				"$msCompile"
			],
			"isBackground": false,
			"dependsOn": "CMake Configure (Windows)",
			"presentation": {
				"echo": true,
				"reveal": "always",
				"focus": true,
				"panel": "shared"
			}
		}
	]
}
