name: OpenAvnu Build CI

on:
  push:
    branches:
      - main
      - master
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false  # wir setzen die URLs gleich manuell

      - name: Set up dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            git build-essential cmake g++ \
            libpcap-dev libnl-3-dev libnl-genl-3-dev \
            uuid-dev libavahi-client-dev \
            linux-headers-generic libglib2.0-dev \
            libpci-dev libsndfile1-dev libjack-dev \
            libasound2-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

      - name: Fix submodule URLs
        run: |
          git config --file .gitmodules submodule.avdecc-lib.url https://github.com/AVnu/avdecc-lib.git
          git config --file .gitmodules submodule.lib/atl_avb.url https://github.com/zarfld/atl_avb.git
          git config --file .gitmodules submodule.lib/igb_avb.url https://github.com/AVnu/igb_avb.git
          git config --file .gitmodules submodule.thirdparty/cpputest.url https://github.com/cpputest/cpputest.git
          git submodule sync
          git submodule update --init --recursive

      - name: Patch mrpd.h for SOCKET typedef
        run: |
          sed -i 's/^typedef int SOCKET;/#ifndef SOCKET\n#define SOCKET int\n#endif/' daemons/mrpd/mrpd.h

      - name: Build all
        run: |
          make all

      - name: Build daemons/gptp seperately
        if: failure()
        run: |
          make -C daemons/gptp

      - name: Build daemons/mrpd seperately
        if: failure()
        run: |
          make -C daemons/mrpd

      - name: Build examples/simple_listener seperately
        if: failure()
        run: |
          make -C examples/simple_listener
          
      - name: Build examples/simple_talker seperately
        if: failure()
        run: |
          make -C examples/simple_talker
          
      - name: Build lib/igb_avb/lib
        run: |
          make -C lib/igb_avb/lib all

      # ───────────────────────────────────────────────────────────────
      # Fehlerbehandlung: nur ausführen, wenn obiger Build fehlschlägt
      # ───────────────────────────────────────────────────────────────

      - name: Print directory contents on failure
        if: failure()
        run: |
          echo "::group::Directory structure"
          find . -type f | sort
          echo "::endgroup::"

      - name: Show last 100 lines of all *.log or *.txt
        if: failure()
        run: |
          find . -type f \( -name "*.log" -o -name "*.txt" \) -exec echo "::group::{}" \; -exec tail -n 100 {} \; -exec echo "::endgroup::" \;

      - name: Upload build output (if any)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-output-on-failure
          path: |
            lib/**/lib*.a
            **/*.o
            **/*.log
            **/*.txt
